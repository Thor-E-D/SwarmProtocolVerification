A[] (forall(i: Door_t) (Door_log(i).initial and (!Door_log(i).newUpdates)) and forall(j: Forklift_t) (Forklift_log(j).initial and (!Forklift_log(j).newUpdates)) and forall(k: Transport_t) (Transport_log(k).initial and (!Transport_log(k).newUpdates)) ) imply forall(i: logSize_t) forall(j: Transport_t) exists(h: logSize_t) ((trueGlobalLog[i].orderCount == Transport_log(j).currentLog[h].orderCount and Transport_log(j).unSubCount[h] + h == i) || !(Transport_log(j).subscriptions[trueGlobalLog[i].eventID])) && forall(h: logSize_t) forall(j: Transport_t) exists(i: logSize_t) Transport_log(j).currentLog[h].orderCount == 0 || (Transport_log(j).currentLog[h].orderCount == trueGlobalLog[i].orderCount and Transport_log(j).unSubCount[h] + h == i)
A[] (forall(i: Door_t) (Door_log(i).initial and (!Door_log(i).newUpdates)) and forall(j: Forklift_t) (Forklift_log(j).initial and (!Forklift_log(j).newUpdates)) and forall(k: Transport_t) (Transport_log(k).initial and (!Transport_log(k).newUpdates)) ) imply forall(i: logSize_t) forall(j: Forklift_t) exists(h: logSize_t) ((trueGlobalLog[i].orderCount == Forklift_log(j).currentLog[h].orderCount and Forklift_log(j).unSubCount[h] + h == i) || !(Forklift_log(j).subscriptions[trueGlobalLog[i].eventID])) && forall(h: logSize_t) forall(j: Forklift_t) exists(i: logSize_t) Forklift_log(j).currentLog[h].orderCount == 0 || (Forklift_log(j).currentLog[h].orderCount == trueGlobalLog[i].orderCount and Forklift_log(j).unSubCount[h] + h == i)
A[] (forall(i: Door_t) (Door_log(i).initial and (!Door_log(i).newUpdates)) and forall(j: Forklift_t) (Forklift_log(j).initial and (!Forklift_log(j).newUpdates)) and forall(k: Transport_t) (Transport_log(k).initial and (!Transport_log(k).newUpdates)) ) imply forall(i: logSize_t) forall(j: Door_t) exists(h: logSize_t) ((trueGlobalLog[i].orderCount == Door_log(j).currentLog[h].orderCount and Door_log(j).unSubCount[h] + h == i) || !(Door_log(j).subscriptions[trueGlobalLog[i].eventID])) && forall(h: logSize_t) forall(j: Door_t) exists(i: logSize_t) Door_log(j).currentLog[h].orderCount == 0 || (Door_log(j).currentLog[h].orderCount == trueGlobalLog[i].orderCount and Door_log(j).unSubCount[h] + h == i)