A[] forall(i:Robot_t) forall(j:Pump_t) deadlock imply Robot(i).Done and Pump(j).Done
E<> forall(i:Robot_t) Robot(i).WaitingForWater
Robot(0).Done --> Robot(1).Done
A[] deadlock imply Pump(0).Done
A[] (forall(i: Robot_t) (Robot_log(i).initial && (!Robot_log(i).newUpdates)) && forall(j: Pump_t) (Pump_log(j).initial && (!Pump_log(j).newUpdates))) imply forall(i: logSize_t) forall(j: Robot_t) exists(h: logSize_t) ((trueGlobalLog[i].orderCount == Robot_log(j).currentLog[h].orderCount and Robot_log(j).unSubCount[h] + h == i) || !(Robot_log(j).subscriptions[trueGlobalLog[i].eventID])) && forall(h: logSize_t) forall(j: Robot_t) exists(i: logSize_t) Robot_log(j).currentLog[h].orderCount == 0 || (Robot_log(j).currentLog[h].orderCount == trueGlobalLog[i].orderCount and Robot_log(j).unSubCount[h] + h == i)
A[] (forall(i: Robot_t) (Robot_log(i).initial && (!Robot_log(i).newUpdates)) && forall(j: Pump_t) (Pump_log(j).initial && (!Pump_log(j).newUpdates))) imply forall(i: logSize_t) forall(j: Pump_t) exists(h: logSize_t) ((trueGlobalLog[i].orderCount == Pump_log(j).currentLog[h].orderCount and Pump_log(j).unSubCount[h] + h == i) || !(Pump_log(j).subscriptions[trueGlobalLog[i].eventID])) && forall(h: logSize_t) forall(j: Pump_t) exists(i: logSize_t) Pump_log(j).currentLog[h].orderCount == 0 || (Pump_log(j).currentLog[h].orderCount == trueGlobalLog[i].orderCount and Pump_log(j).unSubCount[h] + h == i)